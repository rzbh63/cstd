
#include "cnn4/cnn4.hpp"
#include "test_gradient_check_util.hpp"
#if 0
#include "test_reshape_layer.hpp"
#include "test_transpose_layer.hpp"
#include "test_batch_norm_layer.hpp"
#include "test_inner_product_layer.hpp"
#include "test_pooling_layer.hpp"
#include "test_scale_layer.hpp"
#include "test_bias_layer.hpp"
#include "test_accuracy_layer.hpp"
#include "test_softmax_layer.hpp"
#include "test_softmax_with_loss_layer.hpp"
#include "test_convolution_layer.hpp"
#include "test_deconvolution_layer.hpp"
#endif
#include "test_data_layer.hpp"

#if 0
#include "test_blob.hpp"
#include "test_argmax_layer.hpp"
#include "test_batch_reindex_layer.hpp"
#include "test_benchmark.hpp"
#include "test_caffe_main.hpp"
#include "test_caffe_one.hpp"
#include "test_common.hpp"
#include "test_concat_layer.hpp"
#include "test_contrastive_loss_layer.hpp"
#include "test_crop_layer.hpp"
#include "test_data_transformer.hpp"
#include "test_db.hpp"
#include "test_denseblock_layer.hpp"
#include "test_dummy_data_layer.hpp"
#include "test_eltwise_layer.hpp"
#include "test_embed_layer.hpp"
#include "test_euclidean_loss_layer.hpp"
#include "test_filler.hpp"
#include "test_filter_layer.hpp"
#include "test_flatten_layer.hpp"
#include "test_gradient_based_solver.hpp"
#include "test_gradient_check_util.hpp"
#include "test_hdf5data_layer.hpp"
#include "test_hdf5_output_layer.hpp"
#include "test_hinge_loss_layer.hpp"
#include "test_im2col_layer.hpp"
#include "test_image_data_layer.hpp"
#include "test_infogain_loss_layer.hpp"
#include "test_internal_thread.hpp"
#include "test_io.hpp"
#include "test_layer_factory.hpp"
#include "test_list.hpp"
#include "test_lrn_layer.hpp"
#include "test_lstm_layer.hpp"
#include "test_math_functions.hpp"
#include "test_maxpool_dropout_layers.hpp"
#include "test_memory_data_layer.hpp"
#include "test_multinomial_logistic_loss_layer.hpp"
#include "test_mvn_layer.hpp"
#include "test_net.hpp"
#include "test_neuron_layer.hpp"
#include "test_platform.hpp"
#include "test_power_layer.hpp"
#include "test_protobuf.hpp"
#include "test_random_number_generator.hpp"
#include "test_reduction_layer.hpp"
#include "test_rnn_layer.hpp"
#include "test_sigmoid_cross_entropy_loss_layer.hpp"
#include "test_slice_layer.hpp"
#include "test_solver.hpp"
#include "test_solver_factory.hpp"
#include "test_split_layer.hpp"
#include "test_spp_layer.hpp"
#include "test_stochastic_pooling.hpp"
#include "test_syncedmem.hpp"
#include "test_tanh_layer.hpp"
#include "test_threshold_layer.hpp"
#include "test_tile_layer.hpp"
#include "test_upgrade_proto.hpp"
#include "test_util_blas.hpp"
#endif

int test_all() {
  return 0;
}

