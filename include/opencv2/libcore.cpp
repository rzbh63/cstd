#ifndef _LIBCORE_CPP_
#define _LIBCORE_CPP_

#include "core\algorithm.cpp"
#include "core\alloc.cpp"
#include "core\arithm.cpp"
#include "core\array.cpp"
#include "core\batch_distance.cpp"
#include "core\channels.cpp"
#include "core\check.cpp"
#include "core\command_line_parser.cpp"
#include "core\conjugate_gradient.cpp"
#include "core\convert.avx2.cpp"
#include "core\convert.cpp"
#include "core\convert.fp16.cpp"
#include "core\convert.sse4_1.cpp"
#include "core\convert_c.cpp"
#include "core\convert_scale.cpp"
#include "core\copy.cpp"
#include "core\count_non_zero.cpp"
#include "core\cuda_gpu_mat.cpp"
#include "core\cuda_host_mem.cpp"
#include "core\cuda_info.cpp"
#include "core\cuda_stream.cpp"
#include "core\datastructs.cpp"
#include "core\downhill_simplex.cpp"
#include "core\dxt.cpp"
#include "core\gl_core_3_1.cpp"
#include "core\hal_internal.cpp"
#include "core\kmeans.cpp"
#include "core\lapack.cpp"
#include "core\lda.cpp"
#include "core\logger.cpp"
#include "core\lpsolver.cpp"
#include "core\lut.cpp"
#include "core\mathfuncs.cpp"
#include "core\mathfuncs_core.dispatch.cpp"
#include "core\matmul.cpp"
#include "core\matrix.cpp"
#include "core\matrix_c.cpp"
#include "core\matrix_decomp.cpp"
#include "core\matrix_expressions.cpp"
#include "core\matrix_iterator.cpp"
#include "core\matrix_operations.cpp"
#include "core\matrix_sparse.cpp"
#include "core\matrix_wrap.cpp"
#include "core\mean.cpp"
#include "core\merge.cpp"
#include "core\minmax.cpp"
#include "core\norm.cpp"
#include "core\ocl.cpp"
#include "core\opencl_kernels_core.cpp"
#include "core\opengl.cpp"
#include "core\out.cpp"
#include "core\ovx.cpp"
#include "core\parallel.cpp"
#include "core\parallel_impl.cpp"
#include "core\pca.cpp"
#include "core\persistence.cpp"
#include "core\persistence_base64.cpp"
#include "core\persistence_c.cpp"
#include "core\persistence_cpp.cpp"
#include "core\persistence_json.cpp"
#include "core\persistence_types.cpp"
#include "core\persistence_xml.cpp"
#include "core\persistence_yml.cpp"
#include "core\rand.cpp"
#include "core\softfloat.cpp"
#include "core\split.cpp"
//#include "core\stat.avx2.cpp"
#include "core\stat.dispatch.cpp"
//#include "core\stat.sse4_2.cpp"
#include "core\stat_c.cpp"
#include "core\stl.cpp"
#include "core\sum.cpp"
#include "core\system.cpp"
#include "core\tables.cpp"
#include "core\trace.cpp"
#include "core\types.cpp"
#include "core\umatrix.cpp"
#include "core\va_intel.cpp"
#include "core\directx.cpp"
#include "core\glob.cpp"
#include "core\utils\filesystem.cpp"
#if 0
Mat a;
#include "core\opencv_core_pch.cpp"
#include "core\opencv_perf_core_pch.cpp"
#include "core\opencv_test_core_pch.cpp"
#endif

#undef BLOCK_SIZE

#endif // _LIBCORE_CPP_
